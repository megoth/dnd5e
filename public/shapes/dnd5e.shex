PREFIX dnd5e: <https://dnd5e.app/vocab/dnd5e#>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>PREFIX skos: <http://www.w3.org/2004/02/skos/core#>PREFIX shape: </shapes/dnd5e.shex#>PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>PREFIX dcterms: <http://purl.org/dc/terms/>PREFIX string: <http://www.w3.org/2000/10/swap/string#>PREFIX type: <https://webiomed.ai/blog/obzor-rossiiskikh-sistem-podderzhki-priniatiia-vrachebnykh-reshenii/>shape:AbilityScore {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string+ ;    dnd5e:abbreviation xsd:string ;    dnd5e:skill @shape:Skill* ;}shape:AbilityScoreOption {    dnd5e:abilityScore @shape:AbilityScore? ;    dnd5e:minimumScore xsd:integer? ;}shape:ActionOption {    rdfs:label xsd:string? ;    dnd5e:count xsd:integer? ;    dnd5e:actionType xsd:string? ;}shape:Alignment {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string ;    dnd5e:abbreviation xsd:string ;}shape:Background {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dnd5e:startingProficiencies @shape:Proficiency* ;    dnd5e:startingEquipment @shape:StartingEquipment* ;    dnd5e:startingEquipmentOptions @shape:Choice* ;    dnd5e:languageOptions @shape:Choice? ;    dnd5e:feature @shape:BackgroundFeature? ;    dnd5e:personalityTraits @shape:Choice? ;    dnd5e:ideals @shape:Choice? ;    dnd5e:bonds @shape:Choice? ;    dnd5e:flaws @shape:Choice? ;}shape:BackgroundFeature {    rdfs:label xsd:string? ;    dcterms:description xsd:string* ;}shape:BonusOption {    dnd5e:abilityScore @shape:AbilityScore? ;    dnd5e:bonus xsd:integer? ;}shape:BreathOption {    rdfs:label xsd:string? ;    dnd5e:difficultyClass @shape:DifficultyClass ;    dnd5e:damage @shape:Damage* ;}shape:Choice {    rdf:type @shape:Type ;    dcterms:description xsd:string? ;    dnd5e:choose xsd:integer? ;    dnd5e:ofType xsd:string? ;    dnd5e:from @shape:OptionSet? ;    dnd5e:fromResourceList @shape:ResourceListOptionSet? ;}shape:ChoiceOption {    dnd5e:choice @shape:Choice ;}shape:Class {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string? ;    dnd5e:hitDie xsd:integer ;    dnd5e:levels @shape:ClassLevel* ;    dnd5e:multiclassing @shape:Multiclassing? ;    dnd5e:proficiencies @shape:Proficiency* ;    dnd5e:proficiencyChoices @shape:Choice* ;    dnd5e:savingThrows @shape:AbilityScore* ;    dnd5e:startingEquipment @shape:StartingEquipment* ;    dnd5e:startingEquipmentOptions @shape:Choice* ;    dnd5e:classSpellcasting @shape:ClassSpellcasting ;    dnd5e:spells @shape:Spell* ;}shape:ClassLevel {    rdf:type @shape:Type ;    dnd5e:level xsd:number ;    dnd5e:abilityScoreBonuses xsd:number? ;    dnd5e:proficiencyBonus xsd:number? ;    dnd5e:features @shape:Feature* ;    dnd5e:levelSpellcasting @shape:ClassLevelSpellcasting? ;    dnd5e:classSpecific @shape:ClassSpecific? ;}shape:ClassLevelSpellcasting {    dnd5e:cantripsKnown xsd:number? ;    dnd5e:spellsKnown xsd:number? ;    dnd5e:spellSlotsLevel1 xsd:number? ;    dnd5e:spellSlotsLevel2 xsd:number? ;    dnd5e:spellSlotsLevel3 xsd:number? ;    dnd5e:spellSlotsLevel4 xsd:number? ;    dnd5e:spellSlotsLevel5 xsd:number? ;    dnd5e:spellSlotsLevel6 xsd:number? ;    dnd5e:spellSlotsLevel7 xsd:number? ;    dnd5e:spellSlotsLevel8 xsd:number? ;    dnd5e:spellSlotsLevel9 xsd:number? ;}shape:ClassSpecific {    dnd5e:rageCount xsd:number? ;    dnd5e:rageDamageBonus xsd:number? ;    dnd5e:brutalCriticalDice xsd:number? ;    dnd5e:bardicInspirationDice xsd:number? ;    dnd5e:songOfRestDie xsd:number? ;    dnd5e:magicalSecretsMax5 xsd:number? ;    dnd5e:magicalSecretsMax7 xsd:number? ;    dnd5e:magicalSecretsMax9 xsd:number? ;    dnd5e:channelDivinityChargers xsd:number? ;    dnd5e:destroyUndeadCr xsd:number? ;    dnd5e:wildShapeMaxCr xsd:number? ;    dnd5e:wildShapeSwim xsd:boolean? ;    dnd5e:wildShapeFly xsd:boolean? ;    dnd5e:actionSurges xsd:number? ;    dnd5e:indomitableUses xsd:number? ;    dnd5e:extraAttacks xsd:number? ;    dnd5e:kiPoints xsd:number? ;    dnd5e:unarmoredMovement xsd:number? ;    dnd5e:martialArts @shape:Dice? ;    dnd5e:auraRange xsd:number? ;    dnd5e:favoredEnemies xsd:number? ;    dnd5e:favoredTerrain xsd:number? ;    dnd5e:sneakAttack @shape:Dice? ;    dnd5e:sorceryPoints xsd:number? ;    dnd5e:metamagicKnown xsd:number? ;    dnd5e:creatingSpellSlots @shape:ClassSpecificCreatingSpellSlots* ;    dnd5e:invocationsKnown xsd:number? ;    dnd5e:mysticArcanumLevel6 xsd:number? ;    dnd5e:mysticArcanumLevel7 xsd:number? ;    dnd5e:mysticArcanumLevel8 xsd:number? ;    dnd5e:mysticArcanumLevel9 xsd:number? ;    dnd5e:arcaneRecoverLevels xsd:number? ;}shape:ClassSpellcasting {    dnd5e:level xsd:number ;    dnd5e:spellcastingInfo @shape:ClassSpellcastingInfo* ;    dnd5e:spellcastingAbility @shape:AbilityScore ;}shape:ClassSpellcastingInfo {    rdfs:label xsd:string ;    dcterms:description xsd:string* ;}shape:ClassSpecificCreatingSpellSlots {    dnd5e:spellSlotLevel xsd:number? ;    dnd5e:sorceryPointCost xsd:number? ;}shape:Condition {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string* ;}shape:CountOption {    dnd5e:count xsd:integer? ;    dnd5e:of @shape:Equipment? ;}shape:Damage {    rdf:type @shape:Type ;    dnd5e:dice xsd:string ;    dnd5e:type IRI? ;}shape:DamageOption {    dnd5e:type IRI? ;    dnd5e:dice: xsd:string? ;    dnd5e:notes xsd:string? ;}shape:DamageType {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string* ;}shape:Dice {    dnd5e:diceCount xsd:number? ;    dnd5e:diceValue xsd:number? ;}shape:DifficultyClass {    rdf:type @shape:Type ;    dnd5e:dcValue xsd:integer? ;    dnd5e:successType xsd:string? ;}shape:Equipment {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string* ;}shape:EquipmentCategory {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dnd5e:equipmentList @shape:Equipment* ;}shape:Feature {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string* ;    dnd5e:level xsd:number? ;    dnd5e:class @shape:Class? ;    dnd5e:subclass @shape:Subclass? ;    dnd5e:parent @shape:Feature? ;    dnd5e:prerequisites @shape:FeaturePrerequisite* ;    dnd5e:featureSpecific @shape:FeatureSpecific? ;}shape:FeaturePrerequisite {    rdf:ofType xsd:string ;    dnd5e:level xsd:number? ;    dnd5e:feature @shape:Feature? ;    dnd5e:spell @shape:Spell? ;}shape:FeatureSpecific {    dnd5e:expertiseOptions @shape:Choice? ;    dnd5e:invocations @shape:Feature* ;    dnd5e:subfeatureOptions @shape:Choice? ;}shape:IdealOption {    dnd5e:description xsd:string? ;    dnd5e:alignments IRI* ;}shape:Language {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dnd5e:languageType xsd:string? ;    dnd5e:script xsd:string? ;    dcterms:description xsd:string? ;    dnd5e:typicalSpeakers xsd:string* ;}shape:Multiclassing {    dnd5e:prerequisites @shape:Prerequisite* ;    dnd5e:prerequisiteOptions @shape:Choice ;    dnd5e:proficiencies @shape:Proficiency* ;    dnd5e:proficiencyChoices @shape:Choice* ;}shape:MultipleOption {    dnd5e:actions @shape:ActionOption* ;    dnd5e:choices @shape:ChoiceOption* ;    dnd5e:counts @shape:CountOption* ;    dnd5e:references @shape:ReferenceOption* ;}shape:OptionAction {    rdf:type @shape:Type ;}shape:OptionSet {    dnd5e:abilityScores @shape:AbilityScoreOption* ;    dnd5e:actions @shape:ActionOption* ;    dnd5e:bonuses @shape:BonusOption* ;    dnd5e:breaths @shape:BreathOption* ;    dnd5e:choices @shape:ChoiceOption* ;    dnd5e:counts @shape:CountOption* ;    dnd5e:damages @shape:DamageOption* ;    dnd5e:equipmentCategory @shape:EquipmentCategory? ;    dnd5e:ideals @shape:IdealOption* ;    dnd5e:multiples @shape:MultipleOption* ;    dnd5e:references @shape:ReferenceOption* ;    dnd5e:strings @shape:StringOption* ;}shape:Prerequisite {    dnd5e:abilityScore @shape:AbilityScore? ;    dnd5e:minimumScore xsd:integer? ;}shape:Proficiency {    rdf:type @shape:Type ;    dnd5e:proficiencyType xsd:string? ;    rdfs:label xsd:string ;    dnd5e:classes @shape:Class* ;    dnd5e:races @shape:Race* ;    dnd5e:reference IRI? ;}shape:Race {    rdf:type @shape:Type ;    rdfs:label xsd:string ;}shape:ReferenceOption {    dnd5e:equipment @shape:Equipment? ;    dnd5e:language @shape:Language? ;    dnd5e:proficiency @shape:Proficiency? ;    dnd5e:spell @shape:Spell? ;}shape:ResourceListOptionSet {    dnd5e:resourceList xsd:string? ;}shape:ScorePrerequisiteOption {    dnd5e:abilityScore @shape:AbilityScore? ;    dnd5e:minimumScore xsd:integer? ;}shape:Skill {    rdf:type @shape:Type ;    rdfs:label xsd:string ;    dcterms:description xsd:string+ ;    dnd5e:abilityScore @shape:AbilityScore ;}shape:Spell {    rdf:type @shape:Type ;    rdfs:label xsd:string ;}shape:StartingEquipment {    dnd5e:quantity xsd:integer? ;    dnd5e:equipment @shape:Equipment? ;}shape:StringOption {    dnd5e:string: xsd:strsing? ;}shape:Subclass {    rdf:type @shape:Type ;}shape:Type {    rdf:type rdfs:Class ;}